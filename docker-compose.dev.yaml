version: "3.9"
services:
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=blog_db
    networks:
      - web_api

  jaeger:
    container_name: jaeger_container
    image: jaegertracing/all-in-one:1.47
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
      - "14268:14268"
      - "14269:14269"
      - "14250:14250"
      - "9411:9411"
    networks:
      - web_api

  redis:
    image: redis:6-alpine
    container_name: api_redis
    ports:
      - "6379:6379"
    restart: always
    networks:
      - web_api

  minio:
    container_name: blog_minio
    image: minio/minio:latest
    ports:
      - "9000:9000"
    environment:
      MINIO_ACCESS_KEY: minio_access_key
      MINIO_SECRET_KEY: minio_secret_key_123
    command: sever /data
    networks:
      - web_api

  asynqmon:
    container_name: asynq_monitoring
    image: hibiken/asynqmon
    ports:
      - "3000:3000"
    environment:
      PORT: 3000
      REDIS_ADDR: host.docker.internal:6379
    networks:
      - web_api

  api:
    container_name: blog_api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - jaeger
      - redis
      - minio
      - asynqmon
    entrypoint: [ "/app/wait-for.sh", "postgres:5432", "--", "/app/start.sh" ]
    command: [ "/app/main" ]
    networks:
      - web_api

networks:
  web_api:
    driver: bridge